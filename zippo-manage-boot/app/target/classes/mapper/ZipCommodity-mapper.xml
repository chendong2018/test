<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jianwu.dao.ZipCommodityDao" >
    <resultMap id="BaseResultMap" type="com.jianwu.domain.ZipCommodity" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="commodity_order" property="commodityOrder" jdbcType="VARCHAR" />
        <result column="commodity_name" property="commodityName" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="REAL" />
        <result column="picture" property="picture" jdbcType="VARCHAR" />
        <result column="pictures" property="pictures" jdbcType="VARCHAR" />
        <result column="texture_id" property="textureId" jdbcType="INTEGER" />
        <result column="technology" property="technology" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="commodity_status" property="commodityStatus" jdbcType="INTEGER" />
        <result column="pictures_details" property="picturesDetails" jdbcType="VARCHAR" />
        <result column="express" property="express" jdbcType="DOUBLE" />
        <result column="express_type" property="expressType" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        <if test="fields == null" >
            id, commodity_order, commodity_name, price, picture, pictures, texture_id, technology,
            status, sort, commodity_status, pictures_details, express, express_type, create_time,
            update_time
        </if>
        <if test="fields != null" >
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jianwu.example.ZipCommodityExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from zip_commodity
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="startRow != null" >
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        id,commodity_order,commodity_name,price,picture,pictures,texture_id,technology,status,sort,commodity_status,pictures_details,express,express_type,create_time,update_time
        from zip_commodity
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from zip_commodity
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.jianwu.example.ZipCommodityExample" >
        delete from zip_commodity
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.jianwu.domain.ZipCommodity" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into zip_commodity (commodity_order, commodity_name, price,
        picture, pictures, texture_id,
        technology, status, sort,
        commodity_status, pictures_details, express,
        express_type, create_time, update_time
        )
        values (#{commodityOrder,jdbcType=VARCHAR}, #{commodityName,jdbcType=VARCHAR}, #{price,jdbcType=REAL},
        #{picture,jdbcType=VARCHAR}, #{pictures,jdbcType=VARCHAR}, #{textureId,jdbcType=INTEGER},
        #{technology,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER},
        #{commodityStatus,jdbcType=INTEGER}, #{picturesDetails,jdbcType=VARCHAR}, #{express,jdbcType=DOUBLE},
        #{expressType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.jianwu.domain.ZipCommodity" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into zip_commodity
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="commodityOrder != null" >
                commodity_order,
            </if>
            <if test="commodityName != null" >
                commodity_name,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="picture != null" >
                picture,
            </if>
            <if test="pictures != null" >
                pictures,
            </if>
            <if test="textureId != null" >
                texture_id,
            </if>
            <if test="technology != null" >
                technology,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="sort != null" >
                sort,
            </if>
            <if test="commodityStatus != null" >
                commodity_status,
            </if>
            <if test="picturesDetails != null" >
                pictures_details,
            </if>
            <if test="express != null" >
                express,
            </if>
            <if test="expressType != null" >
                express_type,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="commodityOrder != null" >
                #{commodityOrder,jdbcType=VARCHAR},
            </if>
            <if test="commodityName != null" >
                #{commodityName,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                #{price,jdbcType=REAL},
            </if>
            <if test="picture != null" >
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="pictures != null" >
                #{pictures,jdbcType=VARCHAR},
            </if>
            <if test="textureId != null" >
                #{textureId,jdbcType=INTEGER},
            </if>
            <if test="technology != null" >
                #{technology,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="commodityStatus != null" >
                #{commodityStatus,jdbcType=INTEGER},
            </if>
            <if test="picturesDetails != null" >
                #{picturesDetails,jdbcType=VARCHAR},
            </if>
            <if test="express != null" >
                #{express,jdbcType=DOUBLE},
            </if>
            <if test="expressType != null" >
                #{expressType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jianwu.example.ZipCommodityExample" resultType="java.lang.Integer" >
        select count(*) from zip_commodity
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update zip_commodity
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.commodityOrder != null" >
                commodity_order = #{record.commodityOrder,jdbcType=VARCHAR},
            </if>
            <if test="record.commodityName != null" >
                commodity_name = #{record.commodityName,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null" >
                price = #{record.price,jdbcType=REAL},
            </if>
            <if test="record.picture != null" >
                picture = #{record.picture,jdbcType=VARCHAR},
            </if>
            <if test="record.pictures != null" >
                pictures = #{record.pictures,jdbcType=VARCHAR},
            </if>
            <if test="record.textureId != null" >
                texture_id = #{record.textureId,jdbcType=INTEGER},
            </if>
            <if test="record.technology != null" >
                technology = #{record.technology,jdbcType=INTEGER},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.sort != null" >
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.commodityStatus != null" >
                commodity_status = #{record.commodityStatus,jdbcType=INTEGER},
            </if>
            <if test="record.picturesDetails != null" >
                pictures_details = #{record.picturesDetails,jdbcType=VARCHAR},
            </if>
            <if test="record.express != null" >
                express = #{record.express,jdbcType=DOUBLE},
            </if>
            <if test="record.expressType != null" >
                express_type = #{record.expressType,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update zip_commodity
        set id = #{record.id,jdbcType=INTEGER},
        commodity_order = #{record.commodityOrder,jdbcType=VARCHAR},
        commodity_name = #{record.commodityName,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=REAL},
        picture = #{record.picture,jdbcType=VARCHAR},
        pictures = #{record.pictures,jdbcType=VARCHAR},
        texture_id = #{record.textureId,jdbcType=INTEGER},
        technology = #{record.technology,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        sort = #{record.sort,jdbcType=INTEGER},
        commodity_status = #{record.commodityStatus,jdbcType=INTEGER},
        pictures_details = #{record.picturesDetails,jdbcType=VARCHAR},
        express = #{record.express,jdbcType=DOUBLE},
        express_type = #{record.expressType,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jianwu.domain.ZipCommodity" >
        update zip_commodity
        <set >
            <if test="commodityOrder != null" >
                commodity_order = #{commodityOrder,jdbcType=VARCHAR},
            </if>
            <if test="commodityName != null" >
                commodity_name = #{commodityName,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=REAL},
            </if>
            <if test="picture != null" >
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="pictures != null" >
                pictures = #{pictures,jdbcType=VARCHAR},
            </if>
            <if test="textureId != null" >
                texture_id = #{textureId,jdbcType=INTEGER},
            </if>
            <if test="technology != null" >
                technology = #{technology,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="commodityStatus != null" >
                commodity_status = #{commodityStatus,jdbcType=INTEGER},
            </if>
            <if test="picturesDetails != null" >
                pictures_details = #{picturesDetails,jdbcType=VARCHAR},
            </if>
            <if test="express != null" >
                express = #{express,jdbcType=DOUBLE},
            </if>
            <if test="expressType != null" >
                express_type = #{expressType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jianwu.domain.ZipCommodity" >
        update zip_commodity
        set commodity_order = #{commodityOrder,jdbcType=VARCHAR},
        commodity_name = #{commodityName,jdbcType=VARCHAR},
        price = #{price,jdbcType=REAL},
        picture = #{picture,jdbcType=VARCHAR},
        pictures = #{pictures,jdbcType=VARCHAR},
        texture_id = #{textureId,jdbcType=INTEGER},
        technology = #{technology,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        commodity_status = #{commodityStatus,jdbcType=INTEGER},
        pictures_details = #{picturesDetails,jdbcType=VARCHAR},
        express = #{express,jdbcType=DOUBLE},
        express_type = #{expressType,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateBatchByPrimaryKey" parameterType="java.util.List" >
        <foreach collection="list" item="item" index="index" separator=";" >
            update zip_commodity
            <set >
                commodity_order=#{item.commodityOrder,jdbcType=VARCHAR},
                commodity_name=#{item.commodityName,jdbcType=VARCHAR},
                price=#{item.price,jdbcType=REAL},
                picture=#{item.picture,jdbcType=VARCHAR},
                pictures=#{item.pictures,jdbcType=VARCHAR},
                texture_id=#{item.textureId,jdbcType=INTEGER},
                technology=#{item.technology,jdbcType=INTEGER},
                status=#{item.status,jdbcType=INTEGER},
                sort=#{item.sort,jdbcType=INTEGER},
                commodity_status=#{item.commodityStatus,jdbcType=INTEGER},
                pictures_details=#{item.picturesDetails,jdbcType=VARCHAR},
                express=#{item.express,jdbcType=DOUBLE},
                express_type=#{item.expressType,jdbcType=INTEGER},
                create_time=#{item.createTime,jdbcType=TIMESTAMP},
                update_time=#{item.updateTime,jdbcType=TIMESTAMP},
            </set>
            where
            id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="insertBatch" parameterType="java.util.List" >
        insert into zip_commodity
        <trim prefix="(" suffix=")" suffixOverrides="," >
            id,
            commodity_order,
            commodity_name,
            price,
            picture,
            pictures,
            texture_id,
            technology,
            status,
            sort,
            commodity_status,
            pictures_details,
            express,
            express_type,
            create_time,
            update_time,
        </trim>
        values
        <foreach collection="list" index="index" item="item" separator="," >
            <trim prefix=" (" suffix=")" suffixOverrides="," >
                #{item.id,jdbcType=INTEGER},
                #{item.commodityOrder,jdbcType=VARCHAR},
                #{item.commodityName,jdbcType=VARCHAR},
                #{item.price,jdbcType=REAL},
                #{item.picture,jdbcType=VARCHAR},
                #{item.pictures,jdbcType=VARCHAR},
                #{item.textureId,jdbcType=INTEGER},
                #{item.technology,jdbcType=INTEGER},
                #{item.status,jdbcType=INTEGER},
                #{item.sort,jdbcType=INTEGER},
                #{item.commodityStatus,jdbcType=INTEGER},
                #{item.picturesDetails,jdbcType=VARCHAR},
                #{item.express,jdbcType=DOUBLE},
                #{item.expressType,jdbcType=INTEGER},
                #{item.createTime,jdbcType=TIMESTAMP},
                #{item.updateTime,jdbcType=TIMESTAMP},
            </trim>
        </foreach>
    </insert>
    <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List" >
        <foreach collection="list" item="item" index="index" separator=";" >
            update zip_commodity
            <set >
                <if test="item.commodityOrder!=null" >
                    commodity_order=#{item.commodityOrder,jdbcType=VARCHAR},
                </if>
                <if test="item.commodityName!=null" >
                    commodity_name=#{item.commodityName,jdbcType=VARCHAR},
                </if>
                <if test="item.price!=null" >
                    price=#{item.price,jdbcType=REAL},
                </if>
                <if test="item.picture!=null" >
                    picture=#{item.picture,jdbcType=VARCHAR},
                </if>
                <if test="item.pictures!=null" >
                    pictures=#{item.pictures,jdbcType=VARCHAR},
                </if>
                <if test="item.textureId!=null" >
                    texture_id=#{item.textureId,jdbcType=INTEGER},
                </if>
                <if test="item.technology!=null" >
                    technology=#{item.technology,jdbcType=INTEGER},
                </if>
                <if test="item.status!=null" >
                    status=#{item.status,jdbcType=INTEGER},
                </if>
                <if test="item.sort!=null" >
                    sort=#{item.sort,jdbcType=INTEGER},
                </if>
                <if test="item.commodityStatus!=null" >
                    commodity_status=#{item.commodityStatus,jdbcType=INTEGER},
                </if>
                <if test="item.picturesDetails!=null" >
                    pictures_details=#{item.picturesDetails,jdbcType=VARCHAR},
                </if>
                <if test="item.express!=null" >
                    express=#{item.express,jdbcType=DOUBLE},
                </if>
                <if test="item.expressType!=null" >
                    express_type=#{item.expressType,jdbcType=INTEGER},
                </if>
                <if test="item.createTime!=null" >
                    create_time=#{item.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.updateTime!=null" >
                    update_time=#{item.updateTime,jdbcType=TIMESTAMP},
                </if>
            </set>
            where
            id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <!--分页模糊查询商品列表-->
    <select id="queryLike" resultType="com.jianwu.domain.result.ZipCommodityResponse">
        select z.*,t.texture_name from zip_commodity z left join zip_texture t on z.texture_id=t.id
        <where>
              z.status != -1
            <if test="status!=2" >
               and z.status =#{status}
            </if>
            <if test="commodityOrder!=null and commodityOrder!=''" >
                and z.commodity_order like CONCAT('%', #{commodityOrder} , '%')
            </if>
            <if test="commodityName!=null and commodityName!=''" >
                and z.commodity_name like CONCAT('%', #{commodityName} , '%')
            </if>
          <if test="commodityStatus!=null" >
            and z.commodity_status = #{commodityStatus}
          </if>
        </where>
        order by z.sort
        limit #{start},#{end}
    </select>

    <!--模糊查询商品条数-->
    <select id="queryLikeCount" resultType="int">
        select count(*) from zip_commodity z left join zip_texture t on z.texture_id=t.id
        <where>
            z.status != -1
            <if test="status!=2" >
              and  z.status =#{status}
            </if>
            <if test="commodityOrder!=null and commodityOrder!=''" >
                and z.commodity_order like CONCAT('%', #{commodityOrder} , '%')
            </if>
            <if test="commodityName!=null and commodityName!=''" >
                and z.commodity_name like CONCAT('%', #{commodityName} , '%')
            </if>
          <if test="commodityStatus!=3" >
            and z.commodity_status = #{commodityStatus}
          </if>
        </where>
    </select>
</mapper>