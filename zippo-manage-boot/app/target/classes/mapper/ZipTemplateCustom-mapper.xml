<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jianwu.dao.ZipTemplateCustomDao" >
  <resultMap id="BaseResultMap" type="com.jianwu.domain.ZipTemplateCustom" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="template_id" property="templateId" jdbcType="INTEGER" />
    <result column="template_details_id" property="templateDetailsId" jdbcType="INTEGER" />
    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="texture_id" property="textureId" jdbcType="INTEGER" />
    <result column="template_num" property="templateNum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, open_id, template_id, template_details_id, img_url, content, create_time, texture_id,
      template_num
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jianwu.example.ZipTemplateCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zip_template_custom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    id,open_id,template_id,template_details_id,img_url,content,create_time,texture_id,template_num
    from zip_template_custom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zip_template_custom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jianwu.example.ZipTemplateCustomExample" >
    delete from zip_template_custom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jianwu.domain.ZipTemplateCustom" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zip_template_custom (open_id, template_id, template_details_id,
    img_url, content, create_time,
    texture_id, template_num)
    values (#{openId,jdbcType=VARCHAR}, #{templateId,jdbcType=INTEGER}, #{templateDetailsId,jdbcType=INTEGER},
    #{imgUrl,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
    #{textureId,jdbcType=INTEGER}, #{templateNum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jianwu.domain.ZipTemplateCustom" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zip_template_custom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        open_id,
      </if>
      <if test="templateId != null" >
        template_id,
      </if>
      <if test="templateDetailsId != null" >
        template_details_id,
      </if>
      <if test="imgUrl != null" >
        img_url,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="textureId != null" >
        texture_id,
      </if>
      <if test="templateNum != null" >
        template_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="templateDetailsId != null" >
        #{templateDetailsId,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null" >
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="textureId != null" >
        #{textureId,jdbcType=INTEGER},
      </if>
      <if test="templateNum != null" >
        #{templateNum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jianwu.example.ZipTemplateCustomExample" resultType="java.lang.Integer" >
    select count(*) from zip_template_custom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update zip_template_custom
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.templateId != null" >
        template_id = #{record.templateId,jdbcType=INTEGER},
      </if>
      <if test="record.templateDetailsId != null" >
        template_details_id = #{record.templateDetailsId,jdbcType=INTEGER},
      </if>
      <if test="record.imgUrl != null" >
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.textureId != null" >
        texture_id = #{record.textureId,jdbcType=INTEGER},
      </if>
      <if test="record.templateNum != null" >
        template_num = #{record.templateNum,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update zip_template_custom
    set id = #{record.id,jdbcType=INTEGER},
    open_id = #{record.openId,jdbcType=VARCHAR},
    template_id = #{record.templateId,jdbcType=INTEGER},
    template_details_id = #{record.templateDetailsId,jdbcType=INTEGER},
    img_url = #{record.imgUrl,jdbcType=VARCHAR},
    content = #{record.content,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    texture_id = #{record.textureId,jdbcType=INTEGER},
    template_num = #{record.templateNum,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jianwu.domain.ZipTemplateCustom" >
    update zip_template_custom
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        template_id = #{templateId,jdbcType=INTEGER},
      </if>
      <if test="templateDetailsId != null" >
        template_details_id = #{templateDetailsId,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null" >
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="textureId != null" >
        texture_id = #{textureId,jdbcType=INTEGER},
      </if>
      <if test="templateNum != null" >
        template_num = #{templateNum,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jianwu.domain.ZipTemplateCustom" >
    update zip_template_custom
    set open_id = #{openId,jdbcType=VARCHAR},
    template_id = #{templateId,jdbcType=INTEGER},
    template_details_id = #{templateDetailsId,jdbcType=INTEGER},
    img_url = #{imgUrl,jdbcType=VARCHAR},
    content = #{content,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    texture_id = #{textureId,jdbcType=INTEGER},
    template_num = #{templateNum,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List" >
    <foreach collection="list" item="item" index="index" separator=";" >
      update zip_template_custom
      <set >
        open_id=#{item.openId,jdbcType=VARCHAR},
        template_id=#{item.templateId,jdbcType=INTEGER},
        template_details_id=#{item.templateDetailsId,jdbcType=INTEGER},
        img_url=#{item.imgUrl,jdbcType=VARCHAR},
        content=#{item.content,jdbcType=VARCHAR},
        create_time=#{item.createTime,jdbcType=TIMESTAMP},
        texture_id=#{item.textureId,jdbcType=INTEGER},
        template_num=#{item.templateNum,jdbcType=VARCHAR},
      </set>
      where
      id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into zip_template_custom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      open_id,
      template_id,
      template_details_id,
      img_url,
      content,
      create_time,
      texture_id,
      template_num,
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator="," >
      <trim prefix=" (" suffix=")" suffixOverrides="," >
        #{item.id,jdbcType=INTEGER},
        #{item.openId,jdbcType=VARCHAR},
        #{item.templateId,jdbcType=INTEGER},
        #{item.templateDetailsId,jdbcType=INTEGER},
        #{item.imgUrl,jdbcType=VARCHAR},
        #{item.content,jdbcType=VARCHAR},
        #{item.createTime,jdbcType=TIMESTAMP},
        #{item.textureId,jdbcType=INTEGER},
        #{item.templateNum,jdbcType=VARCHAR},
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List" >
    <foreach collection="list" item="item" index="index" separator=";" >
      update zip_template_custom
      <set >
        <if test="item.openId!=null" >
          open_id=#{item.openId,jdbcType=VARCHAR},
        </if>
        <if test="item.templateId!=null" >
          template_id=#{item.templateId,jdbcType=INTEGER},
        </if>
        <if test="item.templateDetailsId!=null" >
          template_details_id=#{item.templateDetailsId,jdbcType=INTEGER},
        </if>
        <if test="item.imgUrl!=null" >
          img_url=#{item.imgUrl,jdbcType=VARCHAR},
        </if>
        <if test="item.content!=null" >
          content=#{item.content,jdbcType=VARCHAR},
        </if>
        <if test="item.createTime!=null" >
          create_time=#{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.textureId!=null" >
          texture_id=#{item.textureId,jdbcType=INTEGER},
        </if>
        <if test="item.templateNum!=null" >
          template_num=#{item.templateNum,jdbcType=VARCHAR},
        </if>
      </set>
      where
      id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>